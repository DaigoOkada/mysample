devtools::load_all(".")
func1
devtools::load_all()
devtools::load_all()
library(dbplyr)
func1
x
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
func1(c(22,33,44))[]
func1(c(22,33,44))[]
func1(c(22,33,44))
devtools::load_all()
func1(c(22,33,44))
devtools::create(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mysample2")
library(devtools)
devtools::create(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mysample2")
devtools::create(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mysample2")
devtools::create
devtools::create(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mysample2")
devtools::create(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mys")
devtools::create(“C:\\Users\\pengu\\Dropbox (Team Yamada)\\R_package_seminar\\mys")
devtools::create(“C:\\Users\\pengu\\Dropbox (Team Yamada)\\R_package_seminar\\mys")
devtools::create(“C:\Users\pengu\Dropbox (Team Yamada)\R_package_seminar")
devtools::create(“C:\\Users\\pengu\\Dropbox (Team Yamada)\\R_package_seminar")
devtools::create(“C:\\Users\\pengu\\sampp")
setwd(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar\\mysample2")
setwd(“C:\\Users\\pengu\\Dropbox (Team　Yamada)\\R_package_seminar")
setwd(“C:\\Users\\pengu")
setwd(“\C:\\Users\\pengu")
setwd(“\C:\\Users\\pengu")
getwd()
devtools::create("C:/Users/pengu/Dropbox (Team Yamada)/R_package_seminar/mysample2")
devtools::load_all(())
devtools::load_all()
getwd()
dir.create("./data")
save(geno, file="./geno.Rdata") # オブジェクトxだけを保存するとき
geno <- c(9,42,49)
names(geno) <- c("AA","Aa","aa")
save(geno, file="./geno.Rdata") # オブジェクトxだけを保存するとき
save(geno, file="./data/geno.Rdata") # オブジェクトxだけを保存するとき
devtools::use_data(geno)
devtools::use_data(geno)
devtools::use_data(geno,mtcars)
data()
geno <- rmultinom(100,100,c(p^2,2*p*(1-p),(1-9)^2))
p <- 0.3
geno <- rmultinom(100,100,c(p^2,2*p*(1-p),(1-9)^2))
names(geno) <- c("AA","Aa","aa")
geno
p <- 0.3
geno <- t(rmultinom(100,100,c(p^2,2*p*(1-p),(1-9)^2)))
colnames(geno) <- c("AA","Aa","aa")
geno
p
p <- 0.3
geno <- t(rmultinom(100,100,c(p^2,2*p*(1-p),(1-p)^2)))
colnames(geno) <- c("AA","Aa","aa")
geno
devtools::use_data(geno)
devtools::use_data(geno,overwrite = TRUE)
usethis
devtools::document()
help(geno)
devtools::load_all()
geno
data(geno)
rm(genno)
rm(geno)
geno
rm(geno)
ls()
geno
mysample::geno
devtools::rcpp()
devtools::load_all(())
devtools::load_all()
devtools::rcpp()
devtools::use_rcpp()
usethis::use_rcpp()
usethis
usethis::use_data(geno,overwrite = TRUE)
usethis::use_rcpp()
devtools:load_all()
devtools:load_all()
library(devtools)
devtools:load_all()
usethid:load_all()
usethis:load_all()
devtools:load_all()
detach("devtools")
detach("devtools")
devtools::load_all()
library(Rcpp)
pkgbuild::has_build_tools(debug = TRUE)
devtools:load_all()
devtools::load_all()
timeTwo(10)
library(devtools)
ls
usethis::use_rcpp()
Geno
geno
data(geno)
geno
library(Rcpp)
library(RcppExamples)
install.packages("RcppExamples")
library(Rcpp)
library(RcppExamples)
sourseCpp
sourceCpp
Rcpp::sourceCpp
Rcpp::sourceCpp("./src/myrcpp.cpp")
Rcpp::sourceCpp("./src/myrcpp.cpp")
library(mysample)
timeTwo(10)
maf_calculation()
maf_calculation
timesTwo()
timesTwo(10)
library(mysample)
Rcpp::sourceCpp("./src/myrcpp.cpp")
timesTwo()
timesTwo(10)
library(mysample)
timeTwo(10)
timwTwo
geno
library(mysample)
timeTwo(10)
timesTwo(10)
library(mysample)
ls
maf_calculation(c(1,2,3))
timesTwo()
timesTwo(2)
timesTwo("2")
timesTwo("2")
help(timesTwo)
timesTwo
maf_calculation
geno
library(mysample)
dim(geno)
timesTwo
timesTwo
library(mysample)
timesTwo
timesTwo(10)
library(mysample)
timesTwo
timesTwo(8)
library(mysample)
dd
library(mysample)
dd
maf_calculation()
maf_calculation
dd
Rcpp::sourceCpp("./src/myrcpp.cpp")
timesTwo(7)
timesTwo(7.5)
timesTwo(78)
library(mysample)
timesTwo()
timesTwo(9)
timesTwo
library(mysample)
timesTwo
timesTwo(3)
library(mysample)
timesTwo(3)
library(mysample)
library(Rcoo)
library(Rcpp)
library(dplyr)
library(dplyr)
library(mysample)
timesTwo
maf_calculation
maf_calculation(c(2,3,4))
library(mysample)
objects()
geno
maf_calculation
library(mysample)
maf_calculation
install.packages(c("devtools","roxygen2","testthat","knitr"))
library(mysample)
maf_calculation
library(devtools)
x <- has_devel()
x
dentools::load_all()
devtools::load_all()
maf_calculation()
maf_calculation
timesTwo(4)
library(devtools)
x <- has_devel()
x
timesTwo(19)
timesTwo(9)
help(timesTwo)
timesTwo
devtools::load_all()
timesTwo(9)
List GibbsNormal
GibbsNormal
GibbsNormal()
devtools::load_all()
GibbsNormal
dentools::load_all()
usethis::load_all()
devtools::load_all()
timesTwo()
timesTwo(10)
GibbsNormal()
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
plot(fit1$mean,type="l")
plot(fit1$variance,type="l")
xyyy = 9
devtools::load_all()
xxxy
timestamp()
##------ Tue Feb 05 15:23:19 2019 ------##
timesTwo(o)
timesTwo(9)
getwd()
geno <- t(rmultinom(100,100,c(p^2,2*p*(1-p),(1-p)^2)))
colnames(geno) <- c("AA","Aa","aa")
usethis::use_data(geno,overwrite = TRUE)
#save(geno, file="./data/geno.Rdata") # オブジェクトxだけを保存するとき
library(Rcpp) # RcppパッッケージをRにロード
setwd("C:/Users/pengu/Dropbox (Team Yamada)/R_package_seminar/mysample")
sourceCpp("./src/myrcpp.cpp") # ローカルのC++ソースファイルを評価
timesTwo(7)
library(mysample)
getwd()
objects()
devtools::load_all()
objects()
GibbsNormal()
library(mysample)
library(mysample)
GibbsNormal
timesTwo(9)
GibbsNormal
GibbsNormal()
timesTwo()
GibbsNormal
devtools::load_all()
GibbsNormal
Rcpp.package.skeleton("mysample")
objects()
rm(objects())
timesTwo()
timesTwo(2)
Rcpp.package.skeleton("mysample")
devtools::load_all()
timesTwo(8)
devtools::load_all()
library(mysample)
timesTwo
timesTwo(9)
devtools::load_all()
timesTwo(9)
devtools::load_all()
timesTwo(7)
GibbsNormal()
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
plot(fit1$mean,type="l")
plot(fit1$variance,type="l")
library(mysample)
library(mysample)
timesTwo(9)
x
library(mysample)
timesTwo(9)
GibbsNormal()
GibbsNormal
library(mysample)
library(mysample)
GibbsNormal
library(mysample)
GibbsNormal
devtools::load_all()
GibbsNormal
GibbsNormal
library(mysample)
GibbsNormal
devtools::load_all()
GibbsNormal
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
plot(fit1$mean,type="l")
plot(fit1$variance,type="l")
timesTwo(9)
View(timesTwo)
View(timesTwo)
View(timesTwo)
rm(timesTwo)
timesTwo
timesTwo(9)
library(mysample)
timesTwo(9)
devtools::load_all()
timesTwo(9)
objects()
library(mysample)
timesTwo
timesTwo(9)
maf_calculation()
maf_calculation
timesTwo
timesTwo
devtools::load_all()
timesTwo()
timesTwo(9)
GibbsNormal()
GibbsNormal()
library(mysample)
library(mysample)
timesTqo
timesTwo
dyn.load("mysample.dll")
getwd()
timesTwo
library(mysample)
timesTwo
dyn.load("mysample.dll")
dyn.load("./src/mysample.dll")
library(mysample)
timesTwo
GibbsNormal
rnorm(((1/sigma20)*mu0+n*(1/sigma2[1])*xbar)/B,1/sqrt(B))
GibbsNormal_R <- function(x,init, mu0, sigma20, a, b, iter){
mu <- rep(0,iter)
#NumericVector sigma2(iter);
sigma2 <- rep(0,iter)
n = length(x)
xbar = mean(x)
sigma2[1] = init
B = 1/sigma20+n/sigma2[1];
mu[1] = rnorm(((1/sigma20)*mu0+n*(1/sigma2[1])*xbar)/B,1/sqrt(B))
sh1 = a+n/2
for(i in 2:iter){
B = 1/sigma20+n/sigma2[i-1];
mu[i] = rnorm(((1/sigma20)*mu0+n*(1/sigma2[i-1])*xbar)/B,1/sqrt(B));
ra1 = 0
for(j in 1:n){
ra1 = ra1+pow(x[j]-mu[i],2);
}
ra1 = ra1/2 + b;
sigma2[i] = 1/rgamma(sh1,1/ra1);
}
result = list(mu,sigma2)
names(result) <- c("mu","sigma")
return(result)
}
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal_R(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
GibbsNormal_R <- function(x,init, mu0, sigma20, a, b, iter){
mu <- rep(0,iter)
#NumericVector sigma2(iter);
sigma2 <- rep(0,iter)
n = length(x)
xbar = mean(x)
sigma2[1] = init
B = 1/sigma20+n/sigma2[1];
mu[1] = rnorm(((1/sigma20)*mu0+n*(1/sigma2[1])*xbar)/B,1/sqrt(B))
sh1 = a+n/2
for(i in 2:iter){
B = 1/sigma20+n/sigma2[i-1];
mu[i] = rnorm(((1/sigma20)*mu0+n*(1/sigma2[i-1])*xbar)/B,1/sqrt(B));
ra1 = 0
for(j in 1:n){
ra1 = ra1 + (x[j]-mu[i])^2;
}
ra1 = ra1/2 + b;
sigma2[i] = 1/rgamma(sh1,1/ra1);
}
result = list(mu,sigma2)
names(result) <- c("mu","sigma")
return(result)
}
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal_R(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
GibbsNormal
library(mysample)
timesTwo
devtools::load_all()
timesTwo(9)
library(mysample)
timesTwo
devtools::load_all(())
devtools::load_all()
timesTwo(6)
pkgbuild::has_build_tools(debug = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
library(mysample)
library(mysample)
timesTwo
maf_calculation()
devtools::load_all()
timesTwo(9)
library(mysample)
library(mysample)
timesTwo
library(mysample)
timesTwo
library(mysample)
timesTwo
timesTwo(9)
library(mysample)
timesTwo
library(mysample)
timesTwo
timesTwo(9)
GibbsNormal
library(mysample)
GibbsNormal()
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal_R(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
plot(fit1$mean,type="l")
plot(fit1$variance,type="l")
x <- c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
logx <- log(x)
fit1 <-GibbsNormal(x = logx, init = 1,
mu0 = 0, sigma20 = 10000,
a = 0.02, b = 0.02,iter = 2000)
plot(fit1$mean,type="l")
plot(fit1$variance,type="l")
objects()
getwd()
library(mysample)
timesTwo(8)
library(mysample)
timesTwo(9)
library(mysample)
timesTwo
GibbsNormal
Rcpp::GibbsNormal
library(mysample)
library(mysample)
maf_calculation()
maf_calculation
library(mysample)
timesTwo
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(mysample)
GibbsNormal
help(TimesTwo)
library(mysample)
library(mysample)
timesTwo(9)
library(mysample)
timesTwo(9)
ls
